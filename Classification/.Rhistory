table(predict(data_tree),training_data)
table(predict(data_tree),testing_data$class)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
predict(data_tree)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
predict(data_tree,training_data)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
predict(data_tree,testing_data)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
predict(data_tree,testing_data)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
predict(data_tree,testing_data, type="class")
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
table(pred,testing_data$class)
predict(data_tree,testing_data)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
table(pred,testing_data$class)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
plotcp(data_tree)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
plot(data_tree, uniform=TRUE, main="Classification Tree for Cars")
text(data_tree, use.n=TRUE, all=TRUE, cex=.8)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
plot(data_tree, uniform=TRUE, main="Classification Tree for Cars")
text(data_tree, use.n=TRUE, all=TRUE, cex=.8)
plot(data_tree, uniform=TRUE, main="Classification Tree for Cars")
text(data_tree, use.n=TRUE, all=TRUE, cex=.8)
rpart.plot(data_tree)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
rpart.plot(decision_tree,extra = 101)
plotcp(decision_tree)
printcp(decision_tree)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
plot(decision_tree, uniform=TRUE, main="Classification Tree for Cars")
text(decision_tree, use.n=TRUE, all=TRUE, cex=.8)
plot(decision_tree, uniform=TRUE, main="Classification Tree for Cars")
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
plot(decision_tree, uniform=TRUE, main="Classification Tree for Cars")
text(decision_tree, use.n=TRUE, all=TRUE, cex=.8)
rpart.plot(decision_tree,extra = 101)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
print(decision_tree)
summary(decision_tree)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
plot(auto.data.fit,training_data$displacement,main="Figure 2: fitted(mpg) vs displacement, as compared to the fitted red line in the figure 1")
plot(mpg ~ displacement,data = training_data,main="Figure 1: mpg vs displacement and the fit line in Red")
abline(auto.data.lm,col="red")
plot(auto.data.fit,training_data$displacement,main="Figure 2: fitted(mpg) vs displacement, as compared to the fitted red line in the figure 1")
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
plot(auto.data.residual,training_data$displacement,main="Figure 3: residual(mpg) vs displacement, as compared to the fitted red line in the figure 1")
plot(auto.data.residual,training_data$displacement,main="Figure 3: residual(mpg) vs displacement, as compared to the fitted red line in the figure 1 on Training Data")
plot(auto.data.fit,training_data$displacement,main="Figure 2: fitted(mpg) vs displacement, as compared to the fitted red line in the figure 1 on Training Data")
plot(mpg ~ displacement,data = training_data,main="Figure 1: mpg vs displacement and the fit line in Red on Training Data")
abline(auto.data.lm,col="red")
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
auto.data.lm.pred = predict(auto.data.lm,  testing_data,interval = "predict",se.fit = TRUE)
auto.data.lm.pred
head(auto.data.lm.pred)
auto.data.lm.pred[1]
2
auto.data.lm.pred[2]
auto.data.lm.pred[1-2]
auto.data.lm.conf
auto.data.lm.conf = predict(data.lm,  testing_data,interval = "confidence",se.fit = TRUE)
auto.data.lm.conf = predict(auto.data.lm,  testing_data,interval = "confidence",se.fit = TRUE)
write.csv(auto.data.lm.conf, "confidence_interval_pred.csv")
auto.data.lm.conf
auto.data.pred.v.obsr = data.frame(
observed = testing_data$mpg,
predicted = auto.data.lm.conf$fit[,1]
)
auto.data.pred.v.obsr
result = stack(auto.data.pred.v.obsr)
result
plot(auto.data.pred.v.obsr$observed,testing_data$displacement)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement)
plot(auto.data.pred.v.obsr$observed,auto.data.pred.v.obsr$predicted)
plot(auto.data.pred.v.obsr$observed,testing_data$displacement)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement)
res <- stack(auto.data.pred.v.obsr)
res <- cbind(res, x = rep(testing_data$mpg, 2))
print(xyplot(values ~ x, data = res, type = c("p","r"), col.line = "red"))
library('lattice')
library('graphics')
res <- stack(auto.data.pred.v.obsr)
res <- cbind(res, x = rep(testing_data$mpg, 2))
print(xyplot(values ~ x, data = res, type = c("p","r"), col.line = "red"))
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
res <- stack(auto.data.pred.v.obsr)
res <- cbind(res, x = rep(testing_data$mpg, 2))
print(xyplot(values ~ x, data = res, group=ind,col="red"))
print(xyplot(values ~ x, data = res, group=ind,auto.key = FALSE))
print(xyplot(values ~ x, data = res, group=ind,auto.key = TRUE))
print(xyplot(x ~ values, data = res, group=ind,auto.key = TRUE))
print(xyplot(values ~ x, data = res, group=ind,auto.key = TRUE))
res
plot(auto.data.pred.v.obsr$predicted,testing_data$mpg,main="Figure 4: predicted vs observed, on Testing Data")
plot(auto.data.pred.v.obsr$predicted,testing_data$mpg,ylab="Observed",xlab="Predicted",main="Figure 4: predicted vs observed, on Testing Data")
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="Observed",xlab="Predicted",main="Figure 4: predicted vs observed, on Testing Data")
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="Observed",xlab="Predicted",main="Figure 4: predicted vs observed, on Testing Data")
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="Observed",xlab="Predicted",main="Figure 4: predicted vs observed, on Testing Data")
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="Observed mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data")
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="Predicted mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data")
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="Observed mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="Predicted mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data")
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="Observed mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="Predicted mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data",col="green")
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data",col="green")
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data",col="green",lwd=2.5)
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data",col="green",lwd=2)
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data",col="green",lwd=2)
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data",col="green",lwd=1)
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data",col="green",lwd=1.5)
legend(2000,9.5,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 5: predicted vs observed, on Testing Data",col="green",lwd=1.5)
legend(2000,9.5,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,col="green",lwd=1.5)
legend(2000,9.5,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
legend(2000,9.5,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
legend(1000,9.5,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
legend(1000,9.5,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
legend(200,3,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
legend(200,3,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
legend(200,3,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3, 4, 6),
text.col = "green4", lty = c(2, -1, 1), pch = c(NA, 3, 4),
merge = TRUE, bg = "gray90")
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend(200,3,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend(1,3,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend(1,1,c("Observed","Predicted"),lty=c(1,1),lwd=c(2.5,2.5),col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),lty=1,col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),lty=1,lwd=c(2.5,2.5),col=c("blue","red"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),lty=1,lwd=c(2.5,2.5),col=c("red","green"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),lty=1,lwd=c(2.5,2.5),pch = 1,col=c("red","green"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),pch = 1,col=c("red","green"))
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegressionForAutoMpg.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/DecisionTreeClassifier.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/LinearRegression.R')
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),pch = 1,col=c("red","green"))
plot(auto.data.pred.v.obsr$observed,testing_data$displacement,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$displacement,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),pch = 1,col=c("red","green"))
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
anova(auto.data.mlm)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
plot(formula,data = training_data)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
plot(auto.data.mlm.fit,training_data$displacement)
plot(auto.data.mlm.fit,training_data$mpg)
plot(auto.data.mlm.fit,training_data$weight)
plot(auto.data.mlm.fit,training_data$origin)
plot(auto.data.mlm.fit,training_data$modelyear)
vcov(fit)
vcov(auto.data.mlm)
influence(auto.data.mlm)
coefficients(auto.data.mlm)
residuals(auto.data.mlm)
auto.data.mlm.residual = residuals(auto.data.mlm)
plot(auto.data.mlm.residual,training_data$weight)
plot(auto.data.mlm.residual,training_data$modelyear,main="Fig 5: Residual for mpg vs modelyear on training data")
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
cv.lm(df=testing_data, auto.data.mlm, m=3)
library("DAAG", lib.loc="~/R/win-library/3.3")
cv.lm(df=testing_data, auto.data.mlm, m=3)
cv.lm(df=training_data, auto.data.mlm, m=10)
cv.lm(df=auto.data, auto.data.mlm, m=3)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
auto.data.mlm.pred.weight
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
auto.data.pred.v.obsr = data.frame(
observed = testing_data$mpg,
predicted = auto.data.mlm.conf$fit[,1]
)
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
testing_data$mpg
auto.data.mlm.conf$fit[,1]
auto.data.mlm.conf = predict(auto.data.mlm,  testing_data,interval = "confidence",se.fit = TRUE)
auto.data.mlm.conf$fit[,1]
auto.data.pred.v.obsr = data.frame(
observed = testing_data$mpg,
predicted = auto.data.mlm.conf$fit[,1]
)
plot(auto.data.pred.v.obsr$observed,testing_data$weight,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$weight,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),pch = 1,col=c("red","green"))
plot(auto.data.pred.v.obsr$observed,testing_data$weight,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$weight,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),pch = 1,col=c("red","green"))
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
plot(auto.data.pred.v.obsr$observed,testing_data$weight,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
plot(auto.data.pred.v.obsr$observed,testing_data$weight,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$weight,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
legend('topright',c("Observed","Predicted"),pch = 1,col=c("red","green"))
plot(auto.data.pred.v.obsr$observed,testing_data$weight,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$weight,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),pch = 1,col=c("red","green"))
plot(auto.data.pred.v.obsr$observed,testing_data$weight,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$weight,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),pch = 1,col=c("red","green"))
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
source('C:/Users/MyLife/Dropbox/R Programs/DataMining/DataMining/MultipleLinearRegression.R')
plot(auto.data.pred.v.obsr$observed,testing_data$weight,ylab="mpg",xlab="Displacement",main="Figure 6: predicted vs observed, on Testing Data for weight independent variable",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$weight,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topright',c("Observed","Predicted"),pch = 1,col=c("red","green"))
plot(auto.data.pred.v.obsr$observed,testing_data$origin,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data for origin independent variable",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$origin,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topleft',c("Observed","Predicted"),pch = 1,col=c("red","green"))
plot(auto.data.pred.v.obsr$observed,testing_data$modelyear,ylab="mpg",xlab="Displacement",main="Figure 4: predicted vs observed, on Testing Data for model year independent variable",col="red")
par(new=TRUE)
plot(auto.data.pred.v.obsr$predicted,testing_data$modelyear,ylab="mpg",xlab="Displacement",col="green",lwd=1.5)
par(new=TRUE)
legend('topleft',c("Observed","Predicted"),pch = 1,col=c("red","green"))
setwd("C:/Users/MyLife/Dropbox/R Programs/Classification")
source('C:/Users/MyLife/Dropbox/R Programs/Classification/NaiveBayesCaretLibrary.R')
prop.table(table(training$class)) * 100
source('C:/Users/MyLife/Dropbox/R Programs/Classification/ShrutiNaiveBayes.R')
source('C:/Users/MyLife/Dropbox/R Programs/Classification/ShrutiNaiveBayes.R')
source('C:/Users/MyLife/Dropbox/R Programs/Classification/ShrutiNaiveBayes.R')
source('C:/Users/MyLife/Dropbox/R Programs/Classification/ShrutiNaiveBayes.R')
source('C:/Users/MyLife/Dropbox/R Programs/Classification/ShrutiNaiveBayes.R')
source('C:/Users/MyLife/Dropbox/R Programs/Classification/ShrutiNaiveBayes.R')
packages_required = c('psych','e1071','caret','class','lattice','ggplot2','klaR','MASS')
for(pkg in packages_required){
if(!(pkg %in% rownames(installed.packages()))){
install.packages(pkg)
}
}
library(lattice)
library(ggplot2)
library(MASS)
library(klaR)
library(psych)
library(e1071)
library(caret)
library(class)
data = read.table('newthyroid.dat',skip=10,sep=",")
names(data) = c('T3resin', 'Thyroxin', 'Triiodothyronine', 'Thyroidstimulating', 'TSH_value','class')
data$Class <- factor(data$Class)
data$class <- factor(data$class)
gp <- runif(nrow(data))
data <- data[order(gp),]
t1=data[1:120, -5]
t1_o=data[1:120, 5]
t2=data[121:159, -5]
t2_o=data[121:159, 5]
naiveBayesModel <- train(t1,t1_o,'nb',trControl = trainControl(method = 'cv',number = 10))
unique(data$class)
data$class <- factor(data$class)
gp <- runif(nrow(data))
data <- data[order(gp),]
t1=data[1:120, -5]
t1_o=data[1:120, 5]
t2=data[121:159, -5]
t2_o=data[121:159, 5]
naiveBayesModel <- train(t1,t1_o,'nb',trControl = trainControl(method = 'cv',number = 10))
source('C:/Users/MyLife/Dropbox/R Programs/Classification/ShrutiNaiveBayes.R')
data$class <- as.factor(data$class)
t1
naiveBayesModel <- train(t1,t1_o,'nb',trControl = trainControl(method = 'cv',number = 10))
data$class <- factor(data$class)
naiveBayesModel <- train(t1,t1_o,'nb',trControl = trainControl(method = 'cv',number = 10))
unique(data$class)
data$class <- factor(data$class)
gp <- runif(nrow(data))
data <- data[order(gp),]
t1=data[1:120, -5]
t1_o=data[1:120, 5]
t2=data[121:159, -5]
t2_o=data[121:159, 5]
naiveBayesModel <- train(t1,t1_o,'nb',trControl = trainControl(method = 'cv',number = 10))
print(naiveBayesModel)
data$class = ifelse(data$class == 1 , 'C1',ifelse(data$class==2,'C2','C3'))
source('C:/Users/MyLife/Dropbox/R Programs/Classification/ShrutiNaiveBayes.R')
data$class = ifelse(data$class == 1 , 'C1',ifelse(data$class==2,'C2','C3'))
gp <- runif(nrow(data))
data <- data[order(gp),]
t1=data[1:120, -5]
t1_o=data[1:120, 5]
t2=data[121:159, -5]
t2_o=data[121:159, 5]
naiveBayesModel <- train(t1,t1_o,'nb',trControl = trainControl(method = 'cv',number = 10))
source('C:/Users/MyLife/Dropbox/R Programs/Classification/KNearestNeighbourClassification.R')
source('C:/Users/MyLife/Dropbox/R Programs/Classification/KNearestNeighbourClassification.R')
packages_required = c('neuralnet')
for(pkg in packages_required){
if(!(pkg %in% rownames(installed.packages()))){
install.packages(pkg)
}
}
library(neuralnet)
data = read.table('newthyroid.dat',skip=10,sep=",")
names(data) = c('T3resin', 'Thyroxin', 'Triiodothyronine', 'Thyroidstimulating', 'TSH_value','class')
error_calc_func = "sse"
threshold_limit = 0.01
#most of the time the hidden layer is like 3 or 2 or 1
hidden_layer = 3
formula = class ~ Thyroxin + Triiodothyronine + T3resin + Thyroidstimulating + TSH_value
# 'backprop', 'rprop+', 'rprop-', 'sag', or 'slr'.
# 'backprop' refers to backpropagation,
# 'rprop+' and 'rprop-' refer to the resilient backpropagation with and without weight backtracking,
# while 'sag' and 'slr' induce the usage of the modified globally convergent algorithm (grprop).
algorithm_used = 'backprop'
repetation = 1
learningrate  = 1
activation_function = 'logistic'
# Classification - False
# Regression - True
linear_output = FALSE
neuralnet = neuralnet(formula = formula,
data=data,
hidden = hidden_layer,
linear.output = linear_output,
err.fct = error_calc_func,
act.fct = activation_function,
rep = repetation)
print(neuralnet$T3resin)
print(neuralnet$Thyroxin)
neuralnet = neuralnet(formula = formula,
data=data,
hidden = hidden_layer,
linear.output = linear_output,
err.fct = error_calc_func,
act.fct = activation_function,
rep = repetation)
print(neuralnet$T3resin)
print(neuralnet$Thyroxin)
print(neuralnet$Thyroidstimulating)
neuralnet1 = ifelse(neuralnet$T3resin[[1]]>0.5,1)
misclassificationError = mean(data$Thyroxin!=neuralnet1)
print(misclassificationError)
print(neuralnet$result.matrix)
plot(neuralnet)
